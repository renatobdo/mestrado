version: "3.5"
services:
  iot-agent:
    build: ./iot-agent/swamp-iot-agent
    hostname: iot-agent
    container_name: iot-agent-lora
    expose:
      - "3456"
    ports:
      - "3456:3456"
    networks:
      - default
    environment: 
      - TZ=America/Sao_Paulo
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"

  # IoT-Agent is configured for the UltraLight Protocol
  iot-agentxml:
    image: fiware/iotagent-xml
    build:
      context: iot-agent
      dockerfile: Dockerfile
    hostname: iot-agentxml
    container_name: fiware-iot-agentxml
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "${IOTA_NORTH_PORT}"
      - "${IOTA_SOUTH_PORT}"
    ports:
      - "${IOTA_NORTH_PORT}:${IOTA_NORTH_PORT}" # localhost:4041
      - "${IOTA_SOUTH_PORT}:${IOTA_SOUTH_PORT}" # localhost:7896
    environment:
      - IOTA_CB_HOST=orion # name of the context broker to update context
      - IOTA_CB_PORT=${ORION_PORT} # port the context broker listens on to update context
      - IOTA_NORTH_PORT=${IOTA_NORTH_PORT}
      - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
      - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
      - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
      - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
      - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
      - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
      - IOTA_MONGO_PORT=${MONGO_DB_PORT} # The port mongoDB is listening on
      - IOTA_MONGO_DB=iotagentxml # The name of the database used in mongoDB
      - IOTA_HTTP_PORT=${IOTA_SOUTH_PORT} # The port used for device traffic over HTTP
      - IOTA_PROVIDER_URL=http://iot-agent:${IOTA_NORTH_PORT}
      - IOTA_DEFAULT_RESOURCE=/iot/xml
    healthcheck:
      test: curl --fail -s http://iot-agent:${IOTA_NORTH_PORT}/iot/about || exit 1

# IoT-Agent is configured for the JSON Protocol
  iot-agentjson:
    image: fiware/iotagent-json:latest
    hostname: iot-agentjson
    container_name: fiware-iot-agentjson
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "${IOTA_NORTH_PORT2}"
      - "${IOTA_SOUTH_PORT2}"
    ports:
      - "${IOTA_NORTH_PORT2}:${IOTA_NORTH_PORT2}" # localhost:4041
      - "${IOTA_SOUTH_PORT2}:${IOTA_SOUTH_PORT2}" # localhost:7896
    environment:
      - IOTA_CB_HOST=orion # name of the context broker to update context
      - IOTA_CB_PORT=${ORION_PORT} # port the context broker listens on to update context
      - IOTA_NORTH_PORT=${IOTA_NORTH_PORT2}
      - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
      - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
      - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
      - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
      - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
      - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
      - IOTA_MONGO_PORT=${MONGO_DB_PORT} # The port mongoDB is listening on
      - IOTA_MONGO_DB=iotagentjson # The name of the database used in mongoDB
      - IOTA_HTTP_PORT=${IOTA_SOUTH_PORT2} # The port used for device traffic over HTTP
      - IOTA_PROVIDER_URL=http://iot-agent:${IOTA_NORTH_PORT2}
      - IOTA_DEFAULT_RESOURCE=/iot/json
    healthcheck:
      interval: 5s
  
  # IoT-Agent is configured for the UltraLight Protocol
  iot-agentul:
    image: fiware/iotagent-ul:latest
    hostname: iot-agent
    container_name: fiware-iot-agentul
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "${IOTA_NORTH_PORT3}"
      - "${IOTA_SOUTH_PORT3}"
    ports:
      - "${IOTA_NORTH_PORT3}:${IOTA_NORTH_PORT3}" # localhost:4041
      - "${IOTA_SOUTH_PORT3}:${IOTA_SOUTH_PORT3}" # localhost:7896
    environment:
      - IOTA_CB_HOST=orion # name of the context broker to update context
      - IOTA_CB_PORT=${ORION_PORT} # port the context broker listens on to update context
      - IOTA_NORTH_PORT=${IOTA_NORTH_PORT3}
      - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
      - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
      - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
      - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
      - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
      - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
      - IOTA_MONGO_PORT=${MONGO_DB_PORT} # The port mongoDB is listening on
      - IOTA_MONGO_DB=iotagentul # The name of the database used in mongoDB
      - IOTA_HTTP_PORT=${IOTA_SOUTH_PORT3} # The port used for device traffic over HTTP
      - IOTA_PROVIDER_URL=http://iot-agent:${IOTA_NORTH_PORT3}
      - IOTA_DEFAULT_RESOURCE=/iot/d
    healthcheck:
      interval: 5s

  mosquitto:
    image: eclipse-mosquitto:1.5
    hostname: mosquitto
    container_name: mosquitto
    expose:
      - "1883"
      - "9001"
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - default
    environment: 
      - TZ=America/Sao_Paulo
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"

  mongo-db:
    image: mongo:3.6
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "27017"
    ports:
      - "27017:27017"
    networks:
      - default
    command: --bind_ip_all --smallfiles
    environment: 
      - TZ=America/Sao_Paulo
    volumes:
      - mongo-db:/data
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"

  orion:
    image: fiware/orion:3.0.0
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "1026"
    ports:
      - "1026:1026"
    command: -dbhost mongo-db -logLevel DEBUG -corsOrigin __ALL
    environment: 
      - TZ=America/Sao_Paulo
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"

 # crate-db:
  crate-db:
    image: crate:${CRATE_VERSION}
    hostname: crate-db
    container_name: db-crate
  #  networks:
  #    - default
    ports:
      # Admin UI
      - "4200:4200"
      # Transport protocol
      - "4300:4300"
    command: crate -Cauth.host_based.enabled=false -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
    environment:
      - CRATE_HEAP_SIZE=2g 
    #  - TZ=America/Sao_Paulo
    volumes:
      - crate-db:/data
    #  - "/etc/timezone:/etc/timezone:ro"
    #  - "/etc/localtime:/etc/localtime:ro"

  #quantum-leap:
  quantumleap:
    image: orchestracities/quantumleap:${QUANTUMLEAP_VERSION}
    #hostname: quantumleap
    hostname: quantumleap
    container_name: fiware-quantumleap
  #  networks:
  #    - default
    ports:
      - "${QUANTUMLEAP_PORT}:${QUANTUMLEAP_PORT}"
    depends_on:
     # - crate-db
      - crate-db
    #volumes:
    #  - "/etc/timezone:/etc/timezone:ro"
    #  - "/etc/localtime:/etc/localtime:ro"
    environment:
      - CRATE_HOST=crate-db
      - LOGLEVEL=DEBUG
    healthcheck:
      test: curl --fail -s http://quantumleap:${QUANTUMLEAP_PORT}/version || exit 1
     #- CRATE_HOST=crate-db
     #- TZ=America/Sao_Paulo
#
#  grafana:
#    image: grafana/grafana
#    depends_on:
#      - crate-db
#    networks:
#      - default
#    ports:
#      - "3003:3000"
#    environment:
#      - GF_INSTALL_PLUGINS=https://github.com/orchestracities/grafana-map-plugin/archive/master.zip;grafana-map-plugin,grafana-clock-panel,grafana-worldmap-panel
#
  cygnus:
    image: fiware/cygnus-ngsi:latest
    hostname: cygnus
    container_name: fiware-cygnus
    depends_on:
      - mongo-db
 #     - mysql-db
    networks:
      - default
    expose:
      - "5080"
    ports:
      - "5050:5050"
      - "5080:5080"
    environment:
      - "CYGNUS_MONGO_HOSTS=mongo-db:27017"
      - "CYGNUS_MYSQL_HOST=mysql-db"
      - "CYGNUS_MYSQL_PORT=3306"
      - "CYGNUS_MYSQL_USER=root"
      - "CYGNUS_MYSQL_PASS=123"
      - "CYGNUS_LOG_LEVEL=DEBUG"
      - "CYGNUS_SERVICE_PORT=5050"
      - "CYGNUS_API_PORT=5080"

#  heliot:
#    image: renatobdo/mestrado:heliot2
#    container_name: heliot2
#    ports:
#      - 8085:8085
#    depends_on:
#      - mongo-db
#    networks:
#      - default
      
#  mysql-db:
#    restart: always
#    image: mysql:5.7
#    hostname: mysql-db
#    container_name: db-mysql
#    expose:
#      - "3306"
#    ports:
#      - "3306:3306"
#    networks:
#      - default
#    environment:
#      - "MYSQL_ROOT_PASSWORD=123"
#      - "MYSQL_ROOT_HOST=%"
#        
networks:
  default:
    ipam:
      config:
        - subnet: 172.18.1.0/24
       # - subnet: 192.168.3.0/24

volumes:
  mongo-db: ~
  crate-db: ~
